<head><script src="https://d3js.org/d3.v6.min.js"></script></head>


<div id="main">
    <div>
        <h1>Stores</h1>

        <div id="graph"></div>



        <ul>
        {{#each stores}}
            <li>
            <strong>Name:</strong> {{this.name}}<br>
            {{#if this.url}}
                <strong>URL:</strong> <a href="{{this.url}}" target="_blank">{{this.url}}</a><br>
            {{/if}}
            {{#if this.district}}
                <strong>District:</strong> {{this.district}}
            {{else}}
                <strong>District:</strong> Not specified
            {{/if}}
            </li>
        {{/each}}
        </ul>

    </div>
</div>


<script>
document.addEventListener('DOMContentLoaded', function() {
    const districtData = {{{json this.districtCounts}}};
    const data = Object.keys(districtData).map((key) => ({
        district: key,
        count: districtData[key]
    }));
    const svgWidth = 600, svgHeight = 400;
    const margin = { top: 20, right: 20, bottom: 30, left: 40 };
    const width = svgWidth - margin.left - margin.right;
    const height = svgHeight - margin.top - margin.bottom;

    const svg = d3.select("#graph")
        .append("svg")
            .attr("width", svgWidth)
            .attr("height", svgHeight)
        .append("g")
            .attr("transform",
                "translate(" + margin.left + "," + margin.top + ")");

    const x = d3.scaleBand()
        .range([ 0, width ])
        .domain(data.map((d) => d.district))
        .padding(0.2);
    svg.append("g")
        .attr("transform", "translate(0," + height + ")")
        .call(d3.axisBottom(x))

    const y = d3.scaleLinear()
        .domain([0, d3.max(data, (d) => d.count)])
        .range([ height, 0]);
    svg.append("g")
        .call(d3.axisLeft(y));

    svg.selectAll("mybar")
        .data(data)
        .join("rect")
            .attr("x", (d) => x(d.district))
            .attr("y", (d) => y(d.count))
            .attr("width", x.bandwidth())
            .attr("height", (d) => height - y(d.count))
            .attr("fill", "#69b3a2");
});
</script>
